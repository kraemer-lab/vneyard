"""Thorney BEAST
"""
configfile: "config/config.yaml"
from grapevne_helper import import_grapevne

grapevne = import_grapevne(workflow)
globals().update(vars(grapevne))

def workspace(path=None, workspace=None):
    name = os.path.basename(output())
    if path:
        return os.path.join("workspace", name, path)
    else:
        return os.path.join("workspace", name)


rule run_beast:
    input:
        xml = input("{major_lineages}.xml"),
        beast_jar = resource("beast.jar"),
    output:
        log = output("lineage_{major_lineages}.log"),
        trees = output("lineage_{major_lineages}.trees"),
    params:
        workdir = workspace(),
    conda:
        env("beast_env.yml")
    log:
        log("{major_lineages}_run.log")
    shell:
        """
        ROOT_DIR=$(pwd)
        mkdir -p {params.workdir}
        cp {input.beast_jar} {params.workdir}
        pushd {params.workdir}
        java \
            -jar beast.jar \
            -overwrite \
            ${{ROOT_DIR}}/{input.xml} 2>&1 | tee ${{ROOT_DIR}}/{log}
        popd
        mv {params.workdir}/lineage_{wildcards.major_lineages}.log {output.log}
        mv {params.workdir}/lineage_{wildcards.major_lineages}.trees {output.trees}
        """


rule _test:
    input:
        output("lineage_1I_K.log"),
        output("lineage_1I_K.trees"),
